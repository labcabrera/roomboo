buildscript {
  ext {
    springBootVersion            = '2.0.4.RELEASE'
    springfoxSwaggerVersion      = '2.9.2'
    jsonwebtokenVersion          = '0.9.1'
    palantirPluginVersion        = '0.20.1'
  }
  repositories {
    //mavenCentral()
    maven { url "http://nexus:8080/nexus/content/groups/public/" }
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:${palantirPluginVersion}")
  }
}

subprojects {

  apply plugin: 'java'
  apply plugin: 'eclipse'
  apply plugin: 'org.springframework.boot'
  apply plugin: 'io.spring.dependency-management'

  group = 'org.lab.roomboo'
  version = version
  sourceCompatibility = 1.8

  repositories {
    //mavenCentral()
    maven { url "http://nexus:8080/nexus/content/groups/public/" }
  }
  dependencies {
    compileOnly('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')
  }
  
}

project(":roomboo-domain") {
  dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-validation')
    compile('org.apache.commons:commons-lang3')
  }
  jar {
    enabled = true
  }
  bootJar {
    classifier = 'boot'
    // workaround to create a simple java library instead of a spring boot jar
    mainClassName = 'org.lab.roomboo.Dummy'
  }
}

project(":roomboo-core") {
  dependencies {
    compile(project(":roomboo-domain"))
    compile('org.springframework.boot:spring-boot-starter-integration')
    testCompile('com.fasterxml.jackson.core:jackson-databind')
  }
  jar {
    enabled = true
  }
  bootJar {
    classifier = 'boot'
    // workaround to create a simple java library instead of a spring boot jar
    mainClassName = 'org.lab.roomboo.Dummy'
  }
}

project(":roomboo-jwt") {
  dependencies {
    compile(project(":roomboo-domain"))
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("io.jsonwebtoken:jjwt:${jsonwebtokenVersion}")
  }
  jar {
    enabled = true
  }
  bootJar {
    classifier = 'boot'
    // workaround to create a simple java library instead of a spring boot jar
    mainClassName = 'org.lab.roomboo.Dummy'
  }
}

project(":roomboo-mail") {
  dependencies {
    compile(project(":roomboo-core"))
    compile('org.springframework.boot:spring-boot-starter-mail')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    testCompile("com.icegreen:greenmail:1.5.7")
    testCompile("org.hamcrest:hamcrest-all:1.3")
  }
  jar {
    enabled = true
  }
  bootJar {
    classifier = 'boot'
    // workaround to create a simple java library instead of a spring boot jar
    mainClassName = 'org.lab.roomboo.Dummy'
  }
}

project(":roomboo-api") {
  apply plugin: 'com.palantir.docker'
  dependencies {
    compile(project(":roomboo-core"))
    compile(project(":roomboo-jwt"))
    compile(project(":roomboo-mail"))
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-hateoas')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("io.springfox:springfox-swagger2:${springfoxSwaggerVersion}")
    compile("io.springfox:springfox-swagger-ui:${springfoxSwaggerVersion}")    
    testCompile('org.springframework.boot:spring-boot-starter-test')
  }
  springBoot {
    buildInfo()
  }
  docker {
    name "labcabrera/${jar.baseName}"
    tags 'latest'
    files jar.archivePath
    buildArgs(['JAR_FILE': "${jar.archiveName}"])
  }
}
